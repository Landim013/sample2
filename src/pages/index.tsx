// import Head from "next/head";
// import Link from "next/link";

// import { api } from "~/utils/api";
// import styles from "./index.module.css";

// export default function Home() {
//   const hello = api.post.hello.useQuery({ text: "from tRPC" });

//   return (
//     <>
//       <Head>
//         <title>Create T3 App</title>
//         <meta name="description" content="Generated by create-t3-app" />
//         <link rel="icon" href="/favicon.ico" />
//       </Head>
//       <main className={styles.main}>
//         <div className={styles.container}>
//           <h1 className={styles.title}>
//             Create <span className={styles.pinkSpan}>T3</span> App
//           </h1>
//           <div className={styles.cardRow}>
//             <Link
//               className={styles.card}
//               href="https://create.t3.gg/en/usage/first-steps"
//               target="_blank"
//             >
//               <h3 className={styles.cardTitle}>First Steps →</h3>
//               <div className={styles.cardText}>
//                 Just the basics - Everything you need to know to set up your
//                 database and authentication.
//               </div>
//             </Link>
//             <Link
//               className={styles.card}
//               href="https://create.t3.gg/en/introduction"
//               target="_blank"
//             >
//               <h3 className={styles.cardTitle}>Documentation →</h3>
//               <div className={styles.cardText}>
//                 Learn more about Create T3 App, the libraries it uses, and how
//                 to deploy it.
//               </div>
//             </Link>
//           </div>
//           <p className={styles.showcaseText}>
//             {hello.data ? hello.data.greeting : "Loading tRPC query..."}
//           </p>
//         </div>
//       </main>
//     </>
//   );
// }
// AI Assist: página simples para testar o retorno da API no console
import Head from "next/head";
import { useState } from "react";
import CityInput from "~/components/CityInput";
import { api } from "~/utils/api";
import styles from "./index.module.css";

export default function Home() {
  const [q, setQ] = useState("");
  const [selectedId, setSelectedId] = useState<string | null>(null);

  const { data: options = [] } = api.cities.autocomplete.useQuery(
    { q, limit: 10 },
    { enabled: q.length >= 2 },
  );
  const { data: city } = api.cities.byId.useQuery(
    { id: selectedId ?? "" },
    { enabled: !!selectedId },
  );

  return (
    <>
      <Head>
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <title>Busca de Cidades</title>
        <meta name="description" content="Generated by create-t3-app" />
      </Head>

      <main className={styles.main}>
        <div className={styles.containerInput}>
          <p className={styles.title}>Busca de Cidades</p>
          <CityInput
            value={q}
            onChange={setQ}
            options={options}
            onSelect={(id, label) => {
              setSelectedId(id);
              setQ(label);
            }}
          />

          {city && (
            <div className={styles.containerInformation}>
              <span className={styles.country}>
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="20"
                  height="20"
                  fill="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path d="M12 2C8.134 2 5 5.134 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.866-3.134-7-7-7zm0 9.5a2.5 2.5 0 1 1 0-5 2.5 2.5 0 0 1 0 5z" />
                </svg>
                {city.city}
              </span>
              <span className={styles.information}>País: {city.country}</span>
              <span className={styles.information}>
                Estado/Prov.: {city.admin_name ?? "—"}
              </span>
              <span className={styles.information}>
                Coordenadas: {city.lat}, {city.lng}
              </span>
              <span className={styles.information}>
                População: {city.population ?? "—"}
              </span>
            </div>
          )}
        </div>
      </main>
    </>
  );
}
